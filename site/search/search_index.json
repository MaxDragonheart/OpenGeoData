{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"OpenGeoData # OpenSource project focused on sharing of geographic data to citizens and technicians. About OpenGeoData # OpenGeoData is a project that born with the ambition of became a platform useful to citizens and technicians for share geographic public data. OpenGeoData use Django , born as cloud based platform thanks to Docker . Building the image # Clone the repository: git clone git@github.com:MaxDragonheart/OpenGeoData.git Edit the env file with your own settings. Build the image: -> Development docker-compose -f docker-compose-dev.yml up -d --build -> Production docker-compose -f docker-compose.yml up -d --build Run project: docker exec -it <containerID> bash Choice if the project runs with initial data( a ) or not( b ). a. Use initial demo data: ./initial_data.sh b. Start empty project: ./build_tables_and_collectstatics.sh python3 website/manage.py createsuperuser Share your geographic data :) Roadmap # You can see the roadmap here .","title":"Home"},{"location":"#opengeodata","text":"OpenSource project focused on sharing of geographic data to citizens and technicians.","title":"OpenGeoData"},{"location":"#about-opengeodata","text":"OpenGeoData is a project that born with the ambition of became a platform useful to citizens and technicians for share geographic public data. OpenGeoData use Django , born as cloud based platform thanks to Docker .","title":"About OpenGeoData"},{"location":"#building-the-image","text":"Clone the repository: git clone git@github.com:MaxDragonheart/OpenGeoData.git Edit the env file with your own settings. Build the image: -> Development docker-compose -f docker-compose-dev.yml up -d --build -> Production docker-compose -f docker-compose.yml up -d --build Run project: docker exec -it <containerID> bash Choice if the project runs with initial data( a ) or not( b ). a. Use initial demo data: ./initial_data.sh b. Start empty project: ./build_tables_and_collectstatics.sh python3 website/manage.py createsuperuser Share your geographic data :)","title":"Building the image"},{"location":"#roadmap","text":"You can see the roadmap here .","title":"Roadmap"},{"location":"guides/django-tips/","text":"Django # Site Start project: poetry run python3 manage.py runserver Backup # Usermanager python3 manage.py dumpdata usermanager.userprofile --indent 2 > fixtures/usermanager/userprofile.json Base python3 manage.py dumpdata sites --indent 2 > fixtures/base/sites.json python3 manage.py dumpdata base.sitesocialurls --indent 2 > fixtures/base/sitesocialurls.json python3 manage.py dumpdata base.siteurls --indent 2 > fixtures/base/siteurls.json python3 manage.py dumpdata base.sharedtags --indent 2 > fixtures/base/sharedtags.json python3 manage.py dumpdata base.sitecustomization --indent 2 > fixtures/base/sitecustomization.json Restore # Globale # python3 manage.py loaddata fixtures/**/*.json","title":"Django tips"},{"location":"guides/django-tips/#django","text":"Site Start project: poetry run python3 manage.py runserver","title":"Django"},{"location":"guides/django-tips/#backup","text":"Usermanager python3 manage.py dumpdata usermanager.userprofile --indent 2 > fixtures/usermanager/userprofile.json Base python3 manage.py dumpdata sites --indent 2 > fixtures/base/sites.json python3 manage.py dumpdata base.sitesocialurls --indent 2 > fixtures/base/sitesocialurls.json python3 manage.py dumpdata base.siteurls --indent 2 > fixtures/base/siteurls.json python3 manage.py dumpdata base.sharedtags --indent 2 > fixtures/base/sharedtags.json python3 manage.py dumpdata base.sitecustomization --indent 2 > fixtures/base/sitecustomization.json","title":"Backup"},{"location":"guides/django-tips/#restore","text":"","title":"Restore"},{"location":"guides/django-tips/#globale","text":"python3 manage.py loaddata fixtures/**/*.json","title":"Globale"},{"location":"guides/docker-tips/","text":"Docker # Build: docker build -t LAYER-NAME . Build with args: docker build --build-arg ARG1=VALUE1 --build-arg ARG2=VALUE2 -t LAYER-NAME . Run and access to container: docker run -it LAYER-NAME Start container: docker container run -it -d --name CONTAINER-NAME -p 8081:8080 LAYER-NAME List of active container: docker ps List of images: docker images Purge images and volumes: docker system prune -a --volumes","title":"Docker tips"},{"location":"guides/docker-tips/#docker","text":"Build: docker build -t LAYER-NAME . Build with args: docker build --build-arg ARG1=VALUE1 --build-arg ARG2=VALUE2 -t LAYER-NAME . Run and access to container: docker run -it LAYER-NAME Start container: docker container run -it -d --name CONTAINER-NAME -p 8081:8080 LAYER-NAME List of active container: docker ps List of images: docker images Purge images and volumes: docker system prune -a --volumes","title":"Docker"},{"location":"guides/env/","text":"Project Environment # The project use .env with the key below: SECRET_KEY='YOUR-SECRET-KEY' DB_ENGINE=django.contrib.gis.db.backends.postgis ALLOWED_HOSTS=127.0.0.1, localhost DEBUG=1 DB_NAME=YOUR-DB_NAME DB_USER=YOUR-DB_USER DB_PASSWORD=YOUR-DB_PASSWORD DB_HOST=YOUR-DB_HOST DB_PORT=YOUR-DB_PORT # Personal Initial Data[Optional] ADMIN_USERNAME= ADMIN_PASSWORD= DOMAIN_NAME= DOMAIN= SITE_TITLE= SITE_LOGO= SITE_DESCRIPTION= ADDRESS= CONTACT_PHONE= CONTACT_EMAIL= CONTACT_OFFICIAL_EMAIL= To generate secret key you can use Djecrety","title":"Environment Parameters"},{"location":"guides/env/#project-environment","text":"The project use .env with the key below: SECRET_KEY='YOUR-SECRET-KEY' DB_ENGINE=django.contrib.gis.db.backends.postgis ALLOWED_HOSTS=127.0.0.1, localhost DEBUG=1 DB_NAME=YOUR-DB_NAME DB_USER=YOUR-DB_USER DB_PASSWORD=YOUR-DB_PASSWORD DB_HOST=YOUR-DB_HOST DB_PORT=YOUR-DB_PORT # Personal Initial Data[Optional] ADMIN_USERNAME= ADMIN_PASSWORD= DOMAIN_NAME= DOMAIN= SITE_TITLE= SITE_LOGO= SITE_DESCRIPTION= ADDRESS= CONTACT_PHONE= CONTACT_EMAIL= CONTACT_OFFICIAL_EMAIL= To generate secret key you can use Djecrety","title":"Project Environment"},{"location":"guides/git-tips/","text":"Git Tips # Push on branch # git status git add . git commit -m \"feat/bug Message #isseuCode\" | es: \"feat Hello world #1\" git push origin Add file to gitignore # echo \"object_name\" >> .gitignore Delete file or folder from branch # git rm -r --cached object_name","title":"Git tips"},{"location":"guides/git-tips/#git-tips","text":"","title":"Git Tips"},{"location":"guides/git-tips/#push-on-branch","text":"git status git add . git commit -m \"feat/bug Message #isseuCode\" | es: \"feat Hello world #1\" git push origin","title":"Push on branch"},{"location":"guides/git-tips/#add-file-to-gitignore","text":"echo \"object_name\" >> .gitignore","title":"Add file to gitignore"},{"location":"guides/git-tips/#delete-file-or-folder-from-branch","text":"git rm -r --cached object_name","title":"Delete file or folder from branch"},{"location":"guides/poetry-tips/","text":"Poetry useful commands # Site Start project: poetry init Run python function: poetry run PYTHON-FUNCTION Es.: Django -> poetry run django-admin startproject personal_website Show python package details: poetry show PACKAGE-NAME Add package: poetry add PACKAGE-NAME Remove package: poetry remove PACKAGE-NAME Install from poetry.lock : poetry install","title":"Poetry tips"},{"location":"guides/poetry-tips/#poetry-useful-commands","text":"Site Start project: poetry init Run python function: poetry run PYTHON-FUNCTION Es.: Django -> poetry run django-admin startproject personal_website Show python package details: poetry show PACKAGE-NAME Add package: poetry add PACKAGE-NAME Remove package: poetry remove PACKAGE-NAME Install from poetry.lock : poetry install","title":"Poetry useful commands"}]}